grafana:
  enabled: true
  sidecar:
    datasources:
      enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    labels: { }
    hosts:
      - grafana.wouritech.com
    path: /
    tls:
      - secretName: grafana-general-tls
        hosts:
         - grafana.wouritech.com

  additionalDataSources:
    - name: loki
      type: loki
      url: http://loki-loki-distributed-gateway.monitoring:80
      access: proxy
      isDefault: false
  persistence:
    enabled: true
    type: pvc
    storageClassName: do-block-storage
    name: grafana-storage
    size: 5Gi
    accessModes:
      - ReadWriteOnce

prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    labels: { }
    hosts:
      - prometheus.wouritech.com
    paths:
      - /
    tls:
      - secretName: prometheus-general-tls
        hosts:
         - prometheus.wouritech.com

  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: prometheus-storage
        spec:
          storageClassName: "do-block-storage"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: "10Gi"

nodeExporter:
  enable: true
  operatingSystems:
    linux:
      enabled: true
    aix:
      enabled: false
    darwin:
      enabled: false
    windows:
      enabled: false

#alertmanager:
#  alertmanagerSpec:
#    storage:
#      volumeClaimTemplate:
#        spec:
#          storageClassName: "do-block-storage"
#          accessModes: ["ReadWriteOnce"]
#          name: alertmanager-storage
#          resources:
#            requests:
#              storage: "10Gi"
