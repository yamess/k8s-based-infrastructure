grafana:
  enabled: true
  sidecar:
    datasources:
      enabled: true
  ingress:
    ## If true, Grafana Ingress will be created
    ##
    enabled: true

    ## IngressClassName for Grafana Ingress.
    ## Should be provided if Ingress is enable.
    ##
    ingressClassName: nginx

    ## Annotations for Grafana Ingress
    ##
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod

    ## Labels to be added to the Ingress
    ##
    labels: { }

    ## Hostnames.
    ## Must be provided if Ingress is enable.
    ##
    # hosts:
    #   - grafana.domain.com
    hosts:
      - grafana.wouritech.com

    ## Path for grafana ingress
    path: /

    ## TLS configuration for grafana Ingress
    ## Secret must be manually created in the namespace
    ##
    tls:
      - secretName: grafana-general-tls
        hosts:
         - grafana.wouritech.com

#  additionalDataSources:
#    - name: loki
#      type: loki
#      url: http://loki-loki-distributed-gateway.monitoring:80
#      access: proxy
#      isDefault: false
#  persistence:
#    enabled: true
#    type: pvc
#    storageClassName: do-block-storage
#    name: grafana-storage
#    size: 10Gi
#    accessModes:
#      - ReadWriteMany
#    finalizers:
#      - kubernetes.io/pvc-protection

#prometheus:
#  prometheusSpec:
#    storageSpec:
#      volumeClaimTemplate:
#        spec:
#          name: prometheus-storage
#          storageClassName: "do-block-storage"
#          accessModes: ["ReadWriteMany"]
#          resources:
#            requests:
#              storage: "10Gi"

nodeExporter:
  enable: true
  operatingSystems:
    linux:
      enabled: true
    aix:
      enabled: false
    darwin:
      enabled: false
    windows:
      enabled: false

#alertmanager:
#  alertmanagerSpec:
#    storage:
#      volumeClaimTemplate:
#        spec:
#          storageClassName: "do-block-storage"
#          accessModes: ["ReadWriteOnce"]
#          name: alertmanager-storage
#          resources:
#            requests:
#              storage: "10Gi"
